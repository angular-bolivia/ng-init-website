---
import { Code } from 'astro:components';
import { getCollection, render } from 'astro:content';

import TutoLayout from '@layout/TutoLayout.astro';

export async function getStaticPaths() {
  const lessons = await getCollection('tutorial');
  return lessons.map((lesson) => ({
    params: { id: lesson.id },
    props: { lesson },
  }));
}

const tutorials = await getCollection('tutorial');
tutorials.sort((a, b) => a.data.order - b.data.order);

const { lesson } = Astro.props;
const { Content } = await render(lesson);
---

<TutoLayout>
  <div class="flex min-h-screen relative">
    {/* Sidebar with tutorial list */}
    <aside class="w-64 bg-gray-50 border-r border-gray-200 p-6 pt-0">
      <nav class="sticky top-0 pt-6">
        <ul class="space-y-2">
          {
            tutorials.map((item) => (
              <li>
                <a
                  href={`/tutorial/${item.id}`}
                  class={`block px-4 py-2 rounded-lg transition-colors ${
                    lesson.id === item.id
                      ? 'bg-blue-500 text-white'
                      : 'hover:bg-gray-100 text-gray-700'
                  }`}
                  data-astro-prefetch
                >
                  {item.data.title}
                </a>
              </li>
            ))
          }
        </ul>
      </nav>
    </aside>

    {/* Main content */}
    <main class="flex w-full p-8">
      <div class="relative h-screen">
        {
          lesson.data.prevStep && (
            <a
              href={`/tutorial/${lesson.data.prevStep}`}
              class="fixed bottom-10 inline-flex items-center px-6 py-3 rounded-lg bg-gray-100 text-gray-700 hover:bg-gray-200 transition-colors"
            >
              <svg
                class="w-5 h-5 mr-2"
                fill="none"
                stroke="currentColor"
                viewBox="0 0 24 24"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M15 19l-7-7 7-7"
                />
              </svg>
              Back
            </a>
          )
        }
      </div>
      <article class="max-w-4xl mx-auto pb-20">
        <div class="prose max-w-none">
          <Content components={{ pre: Code }} />
        </div>
      </article>
      <div class="relative h-screen">
        {
          lesson.data.nextStep && (
            <a
              href={`/tutorial/${lesson.data.nextStep}`}
              class="fixed bottom-10 right-10 inline-flex items-center px-6 py-3 rounded-lg bg-blue-500 text-white hover:bg-blue-600 transition-colors"
            >
              Next
              <svg
                class="w-5 h-5 ml-2"
                fill="none"
                stroke="currentColor"
                viewBox="0 0 24 24"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M9 5l7 7-7 7"
                />
              </svg>
            </a>
          )
        }
      </div>
    </main>
  </div>
</TutoLayout>
